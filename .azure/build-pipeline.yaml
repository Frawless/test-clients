# Triggers
trigger:
  branches:
    include:
      - 'main'
      - 'release-*'
  tags:
    include:
      - '*'
pr:
  autoCancel: true
  branches:
    include:
      - '*'
# Jobs
jobs:
  - job: 'build_and_test'
    displayName: 'Build & Test'
    # Strategy for the job
    strategy:
      matrix:
        'java-11':
          image: 'Ubuntu-18.04'
          jdk_version: '11'
          jdk_path: '/usr/lib/jvm/java-11-openjdk-amd64'
    # Set timeout for jobs
    timeoutInMinutes: 60
    # Base system
    pool:
      vmImage: $(image)
    # Variables
    variables:
      MVN_CACHE_FOLDER: $(HOME)/.m2/repository
      MVN_ARGS: '-e -V -B'
      BUILD_REASON: $(Build.Reason)
      BRANCH: $(Build.SourceBranch)
      COMMIT: $(Build.SourceVersion)
      DOCKER_USER: $(DOCKER_USER)
      DOCKER_PASS: $(DOCKER_PASS)
      ARCHS: 'amd64 s390x ppc64le arm64'
    # Pipeline steps
    steps:
      - task: Cache@2
        inputs:
          key: 'mvn-m2-cache | $(System.JobName)'
          path: "$(MVN_CACHE_FOLDER)"
        displayName: Maven cache
      - template: 'templates/setup_java.yaml'
        parameters:
          JDK_PATH: $(jdk_path)
          JDK_VERSION: $(jdk_version)
      - template: 'templates/setup_docker.yaml'
      - bash: "make java_install"
        displayName: "Build Java artifacts"
      - displayName: "Build containers"
        bash: "make docker_build"
      - displayName: "Push containers"
        bash: "make docker_push"
        condition: and(succeeded(), eq(variables['build.sourceBranch'], 'refs/heads/main'))
      - task: PublishTestResults@2
        inputs:
          testResultsFormat: JUnit
          testResultsFiles: '**/TEST-*.xml'
          testRunTitle: "Unit & Integration tests"
        condition: always()
